package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.64

import (
	"context"
	"fmt"
	"todo-tasks/graph/generated"
	"todo-tasks/graph/model"
	"todo-tasks/internal/domain/auth/decorators"
	"todo-tasks/internal/domain/todos"
	"todo-tasks/internal/domain/users"
	"todo-tasks/internal/utils"
)

// CreateTodo is the resolver for the createTodo field.
func (r *mutationResolver) CreateTodo(ctx context.Context, input model.TodoInput) (*todos.Todo, error) {
	user := ctx.Value(decorators.UserCtxKey).(*users.User)

	todo, err := r.TodoService.CreateTodo(todos.CreateTodoDTO{
		Text:   input.Text,
		UserID: user.ID,
	})
	if err != nil {
		return nil, err
	}

	return todo, nil
}

// UpdateTodo is the resolver for the updateTodo field.
func (r *mutationResolver) UpdateTodo(ctx context.Context, id string, update model.UpdateTodo) (*todos.Todo, error) {
	user := ctx.Value(decorators.UserCtxKey).(*users.User)

	todo, err := r.TodoService.UpdateTodo(todos.Todo{
		ID:     id,
		Text:   *update.Text,
		UserID: user.ID,
		Done:   *update.Done,
	})
	if err != nil {
		return nil, err
	}

	return todo, nil

}

// DeleteTodo is the resolver for the deleteTodo field.
func (r *mutationResolver) DeleteTodo(ctx context.Context, id string) (*todos.Todo, error) {
	return nil, fmt.Errorf("not implemented: DeleteTodo - deleteTodo")

}

// Todos is the resolver for the todos field.
func (r *queryResolver) Todos(_ context.Context, page *model.PageInput) (*model.TodosResponse, error) {
	var dto todos.ReqGetAllTodosDTO
	utils.CopyStruct(&dto, *page)

	todosList, err := r.TodoService.GetAllTodos(dto)
	if err != nil {
		return nil, err
	}

	return &model.TodosResponse{
		Todos: todosList.Todos,
		PageInfo: &model.PageInfo{
			HasNextPage:     todosList.Page.HasNextPage,
			HasPreviousPage: todosList.Page.HasPreviousPage,
			Quantity:        int32(todosList.Page.Quantity),
		},
	}, nil
}

// TodoByID is the resolver for the todoById field.
func (r *queryResolver) TodoByID(ctx context.Context, id string) (*todos.Todo, error) {
	panic(fmt.Errorf("not implemented: TodoByID - todoById"))
}

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
